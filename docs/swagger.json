{
    "basePath": "/",
    "definitions": {
      "httputil.HTTPError": {
        "properties": {
          "code": {
            "example": 400,
            "type": "integer"
          },
          "message": {
            "example": "status bad request",
            "type": "string"
          }
        },
        "type": "object"
      },
      "model.OneState": {
        "type": "object",
        "required": [
          "state_code",
          "total_cases",
          "total_recovered",
          "total_death",
          "total_vaccinated1",
          "total_vaccinated2",
          "total_tested",
          "last_updated"
        ],
        "properties": {
          "state_code": {
            "type": "string",
            "example": "HR"
          },
          "total_cases": {
            "type": "integer",
            "example": 123456
          },
          "total_recovered": {
            "type": "integer",
            "example": 120356
          },
          "total_death": {
            "type": "integer",
            "example": 3654
          },
          "total_vaccinated1": {
            "type": "integer",
            "example": 658545
          },
          "total_vaccinated2": {
            "type": "integer",
            "example": 365244
          },
          "total_tested": {
            "type": "integer",
            "example": 2356878
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "example": "2016-08-29T09:12:33.001Z"
          }
        }
      },
      "model.AllState": {
        "type": "object",
        "required": [
          "state_code",
          "total_cases",
          "total_recovered",
          "total_death",
          "total_vaccinated1",
          "total_vaccinated2",
          "total_tested",
          "last_updated"
        ],
        "properties": {
          "state_code": {
            "type": "string",
            "example": "HR"
          },
          "total_cases": {
            "type": "integer",
            "example": 123456
          },
          "total_recovered": {
            "type": "integer",
            "example": 120356
          },
          "total_death": {
            "type": "integer",
            "example": 3654
          },
          "total_vaccinated1": {
            "type": "integer",
            "example": 658545
          },
          "total_vaccinated2": {
            "type": "integer",
            "example": 365244
          },
          "total_tested": {
            "type": "integer",
            "example": 2356878
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "example": "2016-08-29T09:12:33.001Z"
          }
        }
      }
    },
    "host": "localhost:8080",
    "info": {
      "contact": {
        "email": "support@swagger.io",
        "name": "API Support",
        "url": "http://www.swagger.io/support"
      },
      "description": "This is a sample server echo-to-swagger server.",
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "termsOfService": "http://swagger.io/terms/",
      "title": "Echo to Swagger Example API",
      "version": "1.0"
    },
    "paths": {
      "/GetStateData": {
        "get": {
          "consumes": [
            "application/json"
          ],
          "description": "get data by all states",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {
                "Token": {
                  "description": "qwerty",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/model.OneState"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/httputil.HTTPError"
              }
            },
            "404": {
              "description": "Not Found",
              "schema": {
                "$ref": "#/definitions/httputil.HTTPError"
              }
            },
            "500": {
              "description": "Internal Server Error",
              "schema": {
                "$ref": "#/definitions/httputil.HTTPError"
              }
            }
          },
          "summary": "Get a user",
          "tags": [
            "Api"
          ]
        }
      },
      "/GetAllData": {
        "get": {
          "consumes": [
            "application/json"
          ],
          "description": "get data by stae",
          "parameters": [
            {
              "description": "Enter GeoLocation",
              "in": "query",
              "name": "state",
              "required": true,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {
                "Token": {
                  "description": "qwerty",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/model.AllState"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/httputil.HTTPError"
              }
            },
            "404": {
              "description": "Not Found",
              "schema": {
                "$ref": "#/definitions/httputil.HTTPError"
              }
            },
            "500": {
              "description": "Internal Server Error",
              "schema": {
                "$ref": "#/definitions/httputil.HTTPError"
              }
            }
          },
          "summary": "Get a user",
          "tags": [
            "Api"
          ]
        }
      },
      "/GetByGeoLocation": {
        "get": {
          "consumes": [
            "application/json"
          ],
          "description": "get data by stae",
          "parameters": [
            {
              "in": "query",
              "name": "latitude",
              "description": " Pass a latitude in query",
              "required": true,
              "type": "string"
            },
            {
              "in": "query",
              "name": "longitude",
              "description": " Pass a Longitude in query",
              "required": true,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {
                "Token": {
                  "description": "qwerty",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/model.OneState"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/httputil.HTTPError"
              }
            },
            "404": {
              "description": "Not Found",
              "schema": {
                "$ref": "#/definitions/httputil.HTTPError"
              }
            },
            "500": {
              "description": "Internal Server Error",
              "schema": {
                "$ref": "#/definitions/httputil.HTTPError"
              }
            }
          },
          "summary": "Get a user",
          "tags": [
            "Api"
          ]
        }
      }
    },
    "swagger": "2.0"
  }